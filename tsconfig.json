{
  // Visit https://aka.ms/tsconfig.json to read more about this file
  // TO BE NOTICE: DO NOT config 'include/exclude/files' field or other path value due to path resolution problem.
  // Every path from config file is relative to the file they originated in.
  // ref: https://www.staging-typescript.org/tsconfig#extends last sentence.
  // https://github.com/Microsoft/TypeScript/issues/29172
  "compilerOptions": {
    /* Basic Options */
    "incremental": false /* Enable incremental compilation */,
    "target": "es2016" /* Specify ECMAScript target version: 'ES3' (default), 'ES5', 'ES2015', 'ES2016', 'ES2017', 'ES2018', 'ES2019', 'ES2020', or 'ESNEXT'. */,
    "module": "commonjs" /* Specify module code generation: 'none', 'commonjs', 'amd', 'system', 'umd', 'es2015', 'es2020', or 'ESNext'. */,
    // "lib": [],                                   /* Specify library files to be included in the compilation. */
    "allowJs": true /* Allow javascript files to be compiled. */,
    // "checkJs": true,                             /* Report errors in .js files. */
    "jsx": "react-jsx" /* Specify JSX code generation: 'preserve', 'react-native', 'react', 'react-jsx' or 'react-jsxdev'. */,
    "declaration": true /* Generates corresponding '.d.ts' file. */,
    // "outDir": "./",                              /* Redirect output structure to the directory. */
    "importHelpers": true /* Import emit helpers from 'tslib'. */,
    /* Strict Type-Checking Options */
    /* https://www.staging-typescript.org/tsconfig#strict */
    "strict": true /* Enable all strict type-checking options. */,
    // "noImplicitAny": true, /* Raise error on expressions and declarations with an implied 'any' type. */
    // "strictNullChecks": true, /* Enable strict null checks. */
    // "strictFunctionTypes": true,                 /* Enable strict checking of function types. */
    // "strictBindCallApply": true,                 /* Enable strict 'bind', 'call', and 'apply' methods on functions. */
    // "strictPropertyInitialization": true,        /* Enable strict checking of property initialization in classes. */
    // "noImplicitThis": true,                      /* Raise error on 'this' expressions with an implied 'any' type. */
    // "alwaysStrict": true,                        /* Parse in strict mode and emit "use strict" for each source file. */
    /* Additional Checks */
    "noUnusedLocals": true /* Report errors on unused locals. */,
    "noUnusedParameters": true /* Report errors on unused parameters. */,
    "noImplicitReturns": true /* Report error when not all code paths in function return a value. */,
    "noImplicitOverride": true, /* Ensure overriding members in derived classes are marked with an override modifier. */
    "noFallthroughCasesInSwitch": true /* Report errors for fallthrough cases in switch statement. */,
    // "noUncheckedIndexedAccess": true,            /* Include 'undefined' in index signature results */
    "noPropertyAccessFromIndexSignature": true /* v4.2, Require undeclared properties from index signatures to use element accesses. */,
    /* Module Resolution Options */
    "moduleResolution": "node" /* Specify module resolution strategy: 'node' (Node.js) or 'classic' (TypeScript pre-1.6). */,
    "allowSyntheticDefaultImports": true /* Allow default imports from modules with no default export. This does not affect code emit, just typechecking. */,
    "esModuleInterop": true /* Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports. Implies 'allowSyntheticDefaultImports'. */,
    "skipLibCheck": true /* Skip type checking of declaration files. */,
    "forceConsistentCasingInFileNames": true /* Disallow inconsistently-cased references to the same file. */,
    "pretty": true,
    "newLine": "lf",
    "resolveJsonModule": true,
    "noEmitOnError": true
  }
}
